using UnityEngine;

public class InputDebugger : MonoBehaviour
{
    private float lastLogTime = 0f;
    private float logInterval = 0.5f; // –õ–æ–≥–∏—Ä—É–µ–º –Ω–µ —á–∞—â–µ —Ä–∞–∑–∞ –≤ 0.5 —Å–µ–∫—É–Ω–¥—ã

    private void Update()
    {
        // –ü–æ—Å—Ç–æ—è–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∞–≤–∏—à
        if (Time.time - lastLogTime > logInterval)
        {
            CheckKeyStates();
            lastLogTime = Time.time;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–∂–∞—Ç–∏—è
        if (Input.anyKeyDown)
        {
            LogKeyPresses();
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –º—ã—à—å –æ—Ç–¥–µ–ª—å–Ω–æ
        if (Input.GetMouseButtonDown(0))
        {
            Vector3 mousePos = Input.mousePosition;
            Debug.Log($"<color=yellow>üñ±Ô∏è MOUSE CLICKED at ({mousePos.x}, {mousePos.y})</color>");
        }
    }

    private void CheckKeyStates()
    {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∂–∞—Ç—ã –ª–∏ –∫–ª–∞–≤–∏—à–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å
        bool anyArrow = Input.GetKey(KeyCode.UpArrow) || Input.GetKey(KeyCode.DownArrow) || 
                        Input.GetKey(KeyCode.LeftArrow) || Input.GetKey(KeyCode.RightArrow);
        bool anyWASD = Input.GetKey(KeyCode.W) || Input.GetKey(KeyCode.A) || 
                       Input.GetKey(KeyCode.S) || Input.GetKey(KeyCode.D);
        
        if (anyArrow || anyWASD)
        {
            string pressed = "";
            if (Input.GetKey(KeyCode.UpArrow)) pressed += "‚¨ÜÔ∏è ";
            if (Input.GetKey(KeyCode.DownArrow)) pressed += "‚¨áÔ∏è ";
            if (Input.GetKey(KeyCode.LeftArrow)) pressed += "‚¨ÖÔ∏è ";
            if (Input.GetKey(KeyCode.RightArrow)) pressed += "‚û°Ô∏è ";
            if (Input.GetKey(KeyCode.W)) pressed += "W ";
            if (Input.GetKey(KeyCode.A)) pressed += "A ";
            if (Input.GetKey(KeyCode.S)) pressed += "S ";
            if (Input.GetKey(KeyCode.D)) pressed += "D ";
            
            Debug.Log($"<color=cyan>‚å®Ô∏è Keys held: {pressed}</color>");
        }
    }

    private void LogKeyPresses()
    {
        if (Input.GetKeyDown(KeyCode.UpArrow))
            Debug.Log("<color=lime>‚¨ÜÔ∏è UP ARROW pressed!</color>");
        
        if (Input.GetKeyDown(KeyCode.DownArrow))
            Debug.Log("<color=lime>‚¨áÔ∏è DOWN ARROW pressed!</color>");
        
        if (Input.GetKeyDown(KeyCode.LeftArrow))
            Debug.Log("<color=lime>‚¨ÖÔ∏è LEFT ARROW pressed!</color>");
        
        if (Input.GetKeyDown(KeyCode.RightArrow))
            Debug.Log("<color=lime>‚û°Ô∏è RIGHT ARROW pressed!</color>");
        
        if (Input.GetKeyDown(KeyCode.W))
            Debug.Log("<color=lime>üáº W pressed!</color>");
        
        if (Input.GetKeyDown(KeyCode.A))
            Debug.Log("<color=lime>üá¶ A pressed!</color>");
        
        if (Input.GetKeyDown(KeyCode.S))
            Debug.Log("<color=lime>üá∏ S pressed!</color>");
        
        if (Input.GetKeyDown(KeyCode.D))
            Debug.Log("<color=lime>üá© D pressed!</color>");
            
        // –õ–æ–≥–∏—Ä—É–µ–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –∫–ª–∞–≤–∏—à–∏
        if (Input.inputString.Length > 0)
        {
            Debug.Log($"<color=orange>‚å®Ô∏è Input string: '{Input.inputString}'</color>");
        }
    }

    private void OnGUI()
    {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∫–∞–∫–∏–µ –∫–ª–∞–≤–∏—à–∏ –Ω–∞–∂–∞—Ç—ã
        GUIStyle style = new GUIStyle();
        style.fontSize = 24;
        style.normal.textColor = Color.yellow;
        
        string status = "Press Arrow Keys or WASD\n";
        
        if (Input.GetKey(KeyCode.UpArrow) || Input.GetKey(KeyCode.W))
            status += "‚¨ÜÔ∏è UP\n";
        if (Input.GetKey(KeyCode.DownArrow) || Input.GetKey(KeyCode.S))
            status += "‚¨áÔ∏è DOWN\n";
        if (Input.GetKey(KeyCode.LeftArrow) || Input.GetKey(KeyCode.A))
            status += "‚¨ÖÔ∏è LEFT\n";
        if (Input.GetKey(KeyCode.RightArrow) || Input.GetKey(KeyCode.D))
            status += "‚û°Ô∏è RIGHT\n";
        
        GUI.Label(new Rect(10, Screen.height - 150, 300, 150), status, style);
    }
}
